1. Modifier (min. 3)
   1) private int mCount = 0;
   2) private TextView mShowCount;
   3) public static final  String EXTRA_REPLY =
            "com.example.android.hellotoast.extra.REPLY";

2. Method (min. 4)
   1) public void countUp(View view) {
        mCount++;
        if (mShowCount != null)
            mShowCount.setText(Integer.toString(mCount));
        }
    2) public void countDown(View view) {
        mCount--;
        if (mShowCount != null)
            mShowCount.setText(Integer.toString(mCount));
        }
    3) public void showToast(View view) {
        Toast toast = Toast.makeText(this, R.string.toast_message,
                Toast.LENGTH_SHORT);
        toast.show();
       }
    4)  public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        // Test for the right intent reply.
        if (requestCode == TEXT_REQUEST) {
            // Test to make sure the intent reply result was good.
            if (resultCode == RESULT_OK) {
                String reply = data.getStringExtra(SecondActivity.EXTRA_REPLY);

                // Make the reply head visible.
                mReplyHeadTextView.setVisibility(View.VISIBLE);

                // Set the reply and make it visible.
                mReplyTextView.setText(reply);
                mReplyTextView.setVisibility(View.VISIBLE);
            }
         }

3. Class (min. 2)
   1) public class MainActivity extends AppCompatActivity {}
   2) public class Main2Activity extends AppCompatActivity {}

4. Function (min. 3)
   1)  mCount++;
   2)  mCount--;
   3)  toast.show();


5. Constructor (min. 2)
public class SecondActivity extends AppCompatActivity {

    private int mCount = 10;
    private TextView mShowCount;


    public void countUp(View view) {
        mCount++;
        if (mShowCount != null)
            mShowCount.setText(Integer.toString(mCount));
    }

    public void countDown(View view) {
        mCount--;
        if (mShowCount != null)
            mShowCount.setText(Integer.toString(mCount));
    }

6. Polimorfisme (min. 3)

   1) public class karnivora {
           public static void main(String[] args){
        //Cara Penulisan Objek: (superclass) variable = new (subclass);
        System.out.println("===== HEWAN DEFAULT =====");
        hewan h = new hewan();
        h.setNama();
        h.setSuara();
        h.setBerat();
        
        System.out.println("===== HEWAN KUCING =====");
        hewan k = new kucing();
        k.setNama();
        k.setSuara();
        k.setBerat();
        
        System.out.println("===== HEWAN SINGA =====");
        hewan s = new singa();
        s.setNama();
        s.setSuara();
        s.setBerat();
           }
        }

    2) public class ID {
    public String nama = "Denny";
    private int nip = 1500631011;
    public String jabatan = "Kepala Sekolah";    
    
    public void nama(){
        System.out.println("Nama : "+nama);        
    }
    
    public void nip(){
        System.out.println("Nip : "+nip);
    }
    
    public void jabatan(){
        System.out.println("Jabatan : "+jabatan);
    }
}

    3)public abstract class Karyawan {
 	 private String nama;
  	private String alamat;
  	private int nomor;
 
       public Karyawan(String nama, String alamat, int nomor) {
    	System.out.println("Membuat satu Karyawan");
   	 this.nama = nama;
    	this.alamat = alamat;
    	this.nomor = nomor;
  	}
 
       public double computePay() {
    	System.out.println("Dalam computePAY Karyawan");
    	return 0.0;
  	}
 
      public void mainCheck() {
    	System.out.println("Mengirim sebuah check untuk" + this.nama + " " + this.alamat);
  	}
 
      public String toString() {
   	 return nama + " " + alamat + " " + nomor;
  	}
 
      public String getName() {
    	return nama;
      }
 
      public String getAdress() {
    	return alamat;
      }
 
       public void getAdress(String alamatBaru) {
    	alamat = alamatBaru;
   	    }
 
       public int getNumber() {
    	return nomor;
  	}
	}
      


7. Inheritance (min. 3)

    1) public void showToast(View view) {
        Toast toast = Toast.makeText(this, R.string.toast_message,
                Toast.LENGTH_SHORT);
        toast.show();
       }

    2) public void countUp(View view) {
        mCount++;
        if (mShowCount != null)
            mShowCount.setText(Integer.toString(mCount));
       }

    3) public void countDown(View view) {
        mCount--;
        if (mShowCount != null)
            mShowCount.setText(Integer.toString(mCount));